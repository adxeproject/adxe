name: android

on: 
  push:
    branches:
      - dev
      - release

    paths-ignore:
      - '**.md'
      - 'docs/**'
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  GH_OS_NAME: linux
  BUILD_TARGET: android
  BUILD_TYPE: Release
  PYENV_VERSION: 2.7.18

jobs:
  build:
    if: ${{ !startsWith(github.event.commits[0].message, 'Merge pull request') }}
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - armeabi-v7a
          - arm64-v8a
          - x86
          - x86_64
    env:
      BUILD_ARCH: ${{ matrix.arch }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - uses: actions/setup-java@v3
      with:
        distribution: 'microsoft' # See 'Supported distributions' for available options
        java-version: '11'

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all
      run: tools/unix-ci/before-install.sh
      
    - name: Build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: tools/unix-ci/run-script.sh

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.arch }}
        path: |
          templates/**/*.apk
          tests/**/*.apk
